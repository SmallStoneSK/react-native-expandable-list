const GROUPS = [
  '特别关心',
  '我的好友',
  '小号',
  '小时候',
  '长大后',
  '老年人',
  '陌生人',
  '黑名单'
];

const NICK_NAMES = [
  '哲恒',
  '哲涵',
  '绍帆',
  '绍炎',
  '飞',
  '建军',
  '鑫媛',
  '红芳',
  '辰媛',
  '谷满',
  '谷雪',
  '谷蕊',
  '采萱',
  '曼妮',
  '梦琪',
  '珂辛',
  '鑫淼',
  '谷穗',
  '梦绮',
  '琨执',
  '嘉鲜',
  '然',
  '良福',
  '永杰',
  '力元',
  '圣杰',
  '家驹',
  '楠楠',
  '宝晨',
  '莉佳',
  '民泽',
  '子墨',
  '子钰',
  '智强',
  '叶少',
  '天骁',
  '恺恒',
  '湖光',
  '斯年',
  '贞常',
  '贞嫦',
  '场昴',
  '泰邦',
  '泰华',
  '泰阳',
  '泰中',
  '建鹏',
  '泰安',
  '泰一',
  '泰国',
  '泰然',
  '泰瑞',
  '泰民',
  '泰',
  '读鸾',
  '龄涓',
  '棋因',
  '腾跃',
  '俊凯',
  '博超',
  '博涛',
  '逸飞',
  '孟轩',
  '翔毅',
  '文博',
  '展鹏',
  '宇鑫',
  '鹏涛',
  '文耀',
  '越馨',
  '潇潇',
  '潇文',
  '芳菲',
  '芳华',
  '雅倩',
  '筱筱',
  '霭芸',
  '文馨',
  '有位',
  '静琪',
  '雅琳',
  '馨予',
  '馨雅',
  '蓓蕾',
  '碧岑',
  '筱萱',
  '源南',
  '元南',
  '子峻',
  '雨泽',
  '语泽',
  '勃熙',
  '颀远',
  '海涛',
  '安序',
  '嘉译',
  '泽超',
  '熙泽',
  '宾珠'
];

const ONLINE_TYPE = [
  '2G在线',
  '3G在线',
  '4G在线',
  'TIM在线',
  'WiFi在线',
  '电脑在线'
];

const SIGNATURES = [
  '努力不一定成功，但不努力会很轻松哦',
  '千山万水总是情，放过爸爸行不行',
  '毛爷爷，“我爱你”一生只为你奋斗。',
  '不管英道火不火 爱他一把妥不妥△',
  '钢牙妹怎么了 待我牙套摘下之日 就是妹成姐之时',
  '穷人家的孩子早当家，早熟的孩子早成家。',
  '早自习的时候总会有一个十分和谐的场面——抄作业',
  '要多笑啊，这么多年的牙可不能白刷。',
  '男人，不属于女人.又何必为男人买醉｀',
  '上厕所不看小说不拿手机我真心不自在',
  '看到同学在照镜子总会插一句话：照妖镜。',
  '老师问：“滴水之恩相于涌泉相报是什么意思” 同学：“就是别人弹你一滴水，你拿一桶水泼死他”',
  '每个女生都想拥有一个八阿哥，可惜不是人人都可以当晴川。',
  '睡姿决定发型，从今天开始，我要在家研究睡姿与发型的关系。',
  '小蚊子，你再咬，再咬，小心我把你吃掉',
  '有情人终成眷属，没钱人回家种薯 。',
  '女生的友谊一般起于上厕所买东西',
  '你是喜欢金叹还是放下刘海的英道。',
  '在喝康师傅揭盖有奖时，先舔舔瓶盖里面，是为了看清里面的字，有木有有木有',
  '我是个比较成熟的人，像赌气不吃东西这种事都是吃饱后才做的。',
  '爱一个人 就应该时刻准备和他私奔',
  '不用太羡慕运动排行榜步数比你多的好友，他们可能没走多远，他们只是腿短。',
  '妈妈说我不是个不三不四的人，又说你是个很二的人',
  '我们不熟，所以我是高冷；我们认识，所以我是暖神；我想和你熟，所以我是逗比；我们太熟，所以我是蛇精病！',
  '每天早上都要忍受着和棉被分手的痛苦。',
  '我的手表老贵了，原价35万，打完折420....',
  '四个圈的不一定是宝马，也有可能是雪糕',
  '一分钱一分货，稀饭吃了不经饿。',
  '你早晚都是我的，只有中午不是。',
  '不行，我要努力学习，不想被别人说靠帅气生存。',
  '上班的心情比上坟还要沉重。',
  '其实青果学院也没啥了不起，不就是老师长得帅，讲课幽默吗，提分快吗，我要去我也行。',
  '没错比起以前我是胖了 可我心也宽了 以前想不开的现在我全想开了',
  '生当作人杰，死亦写作业。人生自古谁无死，来生继续写作业。',
  '上课偷玩手机，眼神是这样的←_←、→_→、↑ _ ↑、↓ _ ↓',
  '班主任是容嬷嬷失散的孩子。',
  '到了这个年纪，会在你耳边轻轻唱歌，喜欢你的肉体，还会送你包包的…就只剩下蚊子了。',
  '三天后喊你的对象把花抱稳，要是戳到老子，老子当场让你知道，什么叫玫瑰花的葬礼。',
  '北冥有鱼，其名为鲲，鲲之大，王大陆能一口吞下。',
  '只有单身狗才会觉得第二杯半价是孤独，单身猪不会，她两杯都可以喝掉，甚至还想要第三杯。',
  '讲真的，这种天气就算男朋友跟人跑了，我也不想去追。',
  '你要吃饱，要早睡，不要仗着自己长得丑就可以任意熬夜。',
  '孤独久了，感觉自己都有了仙气。',
  '我还是很讨厌你，像吃了花椒的邻居，麻了隔壁。',
  '长痘有什么的，那是我可爱的冒泡。',
  '真不明白你们这些人，你自己家没有水晶吗，干嘛非要打我家的水晶，简直不讲道理。',
  '别人关心你飞得高不高飞得累不累，而我只关心你翅膀好吃吗？',
  '各位大叔们，明后天开车请勿鸣笛，别觉得高考与你无关，只要你混得足够的好，你媳妇此时正在高考。',
  '我能想到最浪漫的事就是和你一起吃吃吃吃吃吃吃吃然后你付钱你付钱你付钱。',
  '现在的年轻人有三样东西不能碰：追星，熬夜，王者荣耀，越碰你会越觉得，单身一个人可真有意思。',
  '天上的星星真好看，可以帮我摘几颗放在我段位上吗？ゅ',
  '我觉得我现在上课已经不是开小差了，而是直接出差。',
  '每当我准备存钱的时候，总有个声音对我说：对自己好点，这就是存不住钱的原因。',
  '明明可以靠脸吃饭，你却要靠才华，这就是你和明明的差距。',
  '有很多事情你当时想不通，别着急，过一段时间你再想，就想不起来了。',
  '我严重怀疑，月老是不是把我的红线拿去织秋裤了。',
  '曾经有一段真挚的爱情放在我的面前，我没有珍惜，要是能重来……我要选李白。',
  '年轻人有三种东西不能碰，追星，麻将，王者荣耀，越碰你越会觉得，单身一个人可真有意思。',
  '五月我一定要好好存钱，早睡早起没事跑跑步。对了，还得改改我这臭脾气，如果做不到我就六月再发。',
  '从今以后保持低调和神秘，对自己的可爱与仙气只字不提。~',
  '地铁上说禁止携带易燃易爆物品，我默默的下车了。因为我……可爱到爆。',
  '出生的时候，上帝问我是要长得可爱，还是要记性好，我已经忘了我当时是怎么回答的了。',
  '世界让我遍体鳞伤，但伤口长出的却是翅膀，有人拿来飞翔，可我却拿去煲了汤。',
  '一定要记住那些陪你聊到深夜的人，就是因为他们，才让你熬夜导致黑眼圈那么重皮肤这么差的。',
  '在你妈眼里，你只有“你都多大了”和“你才几岁”这两个年龄，并且这两个年龄可能会交叉出现。',
  '小孩子难过了口头上哄哄就开心了，我们大人不行，得吃顿好的或买些东西才行。',
  '我这个人经不起批评，谁要是在游戏里骂我，我就举报他。',
  '我就是我是颜色不一样的烟火，他就是他，是两块钱一捆儿的呲花。',
  '手机摔了这么多次都没事，后来想想还是我的身高救了它。',
  '羡慕那种一伤心就能吃不下饭，然后暴瘦的人。我无论如何都没有这样的时刻，我再伤心都坚持吃饭！'
];

const HEAD_IMAGES = [
  require('../pic/head_1.jpeg'),
  require('../pic/head_2.jpeg'),
  require('../pic/head_3.jpeg'),
  require('../pic/head_4.jpeg'),
  require('../pic/head_5.jpeg'),
  require('../pic/head_6.jpeg'),
  require('../pic/head_7.jpeg'),
  require('../pic/head_8.jpeg'),
  require('../pic/head_9.jpeg'),
  require('../pic/head_10.png'),
  require('../pic/head_11.jpeg'),
  require('../pic/head_12.jpeg'),
  require('../pic/head_13.jpeg'),
  require('../pic/head_14.jpeg'),
  require('../pic/head_15.jpeg'),
  require('../pic/head_16.jpeg'),
  require('../pic/head_17.png'),
  require('../pic/head_18.jpeg'),
  require('../pic/head_19.jpeg'),
  require('../pic/head_20.jpeg'),
];

const randomRange = (min, max) => {
  const diff = max - min;
  return min + parseInt(Math.random() * diff);
};

const mockData = GROUPS.map((groupName) => {

  let obj = {};

  // construct the group header data
  const total = randomRange(0, 5);
  obj.groupHeaderData = {
    title: groupName,
    total: total,
    online: randomRange(0, total)
  };

  // construct the list data
  obj.groupListData = new Array(total).fill(0).map(() => {
    return {
      nickName: NICK_NAMES[randomRange(0, NICK_NAMES.length - 1)],
      headImg: HEAD_IMAGES[randomRange(0, HEAD_IMAGES.length - 1)],
      onlineType: ONLINE_TYPE[randomRange(0, ONLINE_TYPE.length - 1)],
      signature: SIGNATURES[randomRange(0, SIGNATURES.length - 1)]
    }
  });

  return obj;
});

export {
  mockData
};